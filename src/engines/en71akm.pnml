// This is part of Polish PKP Set 2.0 NewGRF.
// Don't include any headers inside this file!
// (c) Tadeusz Domagalski, GPL 2.0

/* EN71akm sprites */
spriteset(sset_en71akm_purchase, "gfx/en71-akm.png")   { tmpl_sprite_purchase(4, 179) }
spriteset(sset_en71akm_advert, "gfx/en71-akm.png")   { tmpl_sprite_purchase(4, 358) }

spriteset(sset_en71akm_head, "gfx/en71-akm.png")       { tmpl_sprite_train12(4, 20) }
spriteset(sset_en71akm_mid1, "gfx/en71-akm.png")       { tmpl_sprite_train10_offset(4, 60, 1) }
spriteset(sset_en71akm_mid2, "gfx/en71-akm.png")       { tmpl_sprite_train10_offset(4, 98, 1) }
spriteset(sset_en71akm_tail, "gfx/en71-akm.png")       { tmpl_sprite_train12_offset(4, 139, 3) }
spriteset(sset_en71akm_head_open, "gfx/en71-akm.png")  { tmpl_sprite_train12(4, 199) }
spriteset(sset_en71akm_mid1_open, "gfx/en71-akm.png")  { tmpl_sprite_train10_offset(4, 239, 1) }
spriteset(sset_en71akm_mid2_open, "gfx/en71-akm.png")  { tmpl_sprite_train10_offset(4, 277, 1) }
spriteset(sset_en71akm_tail_open, "gfx/en71-akm.png")  { tmpl_sprite_train12_offset(4, 318, 3) }
spritegroup sgroup_en71akm_head {
    loaded:     [sset_en71akm_head];
    loading:    [sset_en71akm_head_open];
}
spritegroup sgroup_en71akm_mid1 {
    loaded:     [sset_en71akm_mid1];
    loading:    [sset_en71akm_mid1_open];
}
spritegroup sgroup_en71akm_mid2 {
    loaded:     [sset_en71akm_mid2];
    loading:    [sset_en71akm_mid2_open];
}
spritegroup sgroup_en71akm_tail {
    loaded:     [sset_en71akm_tail];
    loading:    [sset_en71akm_tail_open];
}

/* EN71akm switches */
switch(FEAT_TRAINS, SELF, switch_en71akm_articulated, extra_callback_info1) {
    1..6: return item_en71akm;
    return CB_RESULT_NO_MORE_ARTICULATED_PARTS;
}
switch(FEAT_TRAINS, SELF, switch_en71akm_length, position_in_vehid_chain % 7) {
    1: return 4;    // dummy part
    3: return 2;    // dummy part
    5: return 4;    // dummy part
    return 8;
}
switch(FEAT_TRAINS, SELF, switch_en71akm_purchase, extra_callback_info1 & 0xFF) {
    0x21: return sset_en71akm_advert;
    return sset_en71akm_purchase;
}
switch(FEAT_TRAINS, SELF, switch_en71akm_graphics, position_in_vehid_chain % 7) {
    0: return sgroup_en71akm_head;
    2: return sgroup_en71akm_mid1;
    4: return sgroup_en71akm_mid2;
    6: return sgroup_en71akm_tail;
    return sset_dummy;      // dummy parts
}
switch(FEAT_TRAINS, SELF, switch_en71akm_tour_capacity, position_in_vehid_chain % 7) {
    0: return 56;
    2: return 76;
    4: return 76;
    6: return 56;
    return 1;
}
switch(FEAT_TRAINS, SELF, switch_en71akm_pass_capacity, position_in_vehid_chain % 7) {
    0: return 55;   //55;
    2: return 75; //75;
    4: return 75; //75;
    6: return 55;   //55;
    return 1;
}
switch(FEAT_TRAINS, SELF, switch_en71akm_capacity, cargo_type_in_veh) {
    TOUR: return switch_en71akm_tour_capacity;
    return switch_en71akm_pass_capacity;
}
switch(FEAT_TRAINS, SELF, switch_en71akm_visual_effect_local, position_in_vehid_chain % 7) {
    2: return visual_effect_and_powered(VISUAL_EFFECT_ELECTRIC, 3, DISABLE_WAGON_POWER);
    4: return visual_effect_and_powered(VISUAL_EFFECT_ELECTRIC, -3, DISABLE_WAGON_POWER);
    return visual_effect_and_powered(VISUAL_EFFECT_DISABLE, 0, DISABLE_WAGON_POWER);
}
switch(FEAT_TRAINS, SELF, switch_en71akm_add_text, IS_HEATING_CLIMATE ) {
    1: return string(STR_PURCHASE_DESCR_3L, string(STR_HEATING_ELECTRIC_TEXT), string(STR_4PART_EMU_TEXT), string(STR_INCOME_LOWER));
    return string(STR_PURCHASE_DESCR_2L, string(STR_4PART_EMU_TEXT), string(STR_INCOME_LOWER));
}
switch (FEAT_TRAINS, SELF, switch_en71akm_start_stop, COUNT_EZT > 3) {
    1: return string(STR_TRAIN_TOO_LONG, string(STR_EN71AKM_NAME));
    return CB_RESULT_NO_TEXT;
}
ENGINE_RUNNING_COST_SWITCH(en71akm, EN71AKM)
DIESEL_ELECTRIC_ENGINE_POWER_SWITCH(en71akm)
ENGINE_VISUAL_EFFECT_SWITCH(en71akm)

#ifdef SITTING_PLACES
    #undef SITTING_PLACES
#endif
#ifdef STANDING_PLACES
    #undef STANDING_PLACES
#endif
#define SITTING_PLACES 55*2+75*2
#define STANDING_PLACES 56*2+76*2
#define CARGO_CAPACITY_EN71AKM     int((SITTING_PLACES+STANDING_PLACES-2)/7)

/* Define the actual train */
item(FEAT_TRAINS, item_en71akm, 2005) {
    property {
        /* common properties */
        name:                           string(STR_EN71AKM_NAME);
        climates_available:             PKP_CLIMATES; 
        introduction_date:              date(2012, 1, 1);
        model_life:                     VEHICLE_NEVER_EXPIRES;
        vehicle_life:                   30;
        reliability_decay:              20;
        CARGO_PASSENGERS_WAGON_DEFINITION
        loading_speed:                  21;     // per part
        cost_factor:                    PURCHASE_COST_EN71AKM;
        running_cost_factor:            RUNNING_COST_EN71AKM;
        /* train properties */
        sprite_id:                      SPRITE_ID_NEW_TRAIN;
        speed:                          120 km/h;
        misc_flags:                     bitmask();
        refit_cost:                     0;
        track_type:                     ELRL;
        ai_special_flag:                AI_FLAG_PASSENGER;
        power:                          2000 kW;
        running_cost_base:              RUNNING_COST_ELECTRIC;
        dual_headed:                    0;
        cargo_capacity:                 CARGO_CAPACITY_EN71AKM;
        weight:                         182 ton;
        ai_engine_rank:                 0; // not intended to be used by the ai
        engine_class:                   ENGINE_CLASS_ELECTRIC;
        extra_power_per_wagon:          0 kW;
        tractive_effort_coefficient:    0.27*75/135;
        air_drag_coefficient:           0.07;
        length:                         8;
        extra_weight_per_wagon:         0;
        variant_group:                  2000;
        visual_effect_and_powered:      visual_effect_and_powered(VISUAL_EFFECT_DEFAULT, 0, DISABLE_WAGON_POWER);
        bitmask_vehicle_info:           bitmask(VINFO_PASSENGER_WAGON);
    }

    graphics {
        purchase:                   switch_en71akm_purchase;
        default:                    switch_en71akm_graphics;
        articulated_part:           switch_en71akm_articulated;
        additional_text:            switch_en71akm_add_text;
        length:                     switch_en71akm_length;
        purchase_cargo_capacity:    return CB_FAILED;
        cargo_capacity:             switch_en71akm_capacity;
        visual_effect_and_powered:  switch_en71akm_visual_effect;
        can_attach_wagon:           switch_en57axx_can_attach;
        start_stop:                 switch_en71akm_start_stop;
        ENGINE_RUNNING_COST_CALLBACKS(en71akm)
        ENGINE_POWER_CALLBACKS(en71akm)
    }
}
